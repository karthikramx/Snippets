{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww13440\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1.   Check status 								: git status\
2.   See what changes have been made to the files			: git diff\
3.   Add file to the staging area						: git add filename.txt\
4.   Compare the state of the files with those in the staging area 	: git diff -r HEAD\
5.   Git command to see changes in a file after staging			: git diff -r HEAD file_path/file_name.csv\
6.   Commit changes							: git commit -m \'93Comment for commit\'94\
7.   Command to view the log of the project\'92s history			: git log \
8.   Specific file history 							: git log path/file_name.csv\
9.   Show details of specific commits					: git show hash6\
10. Show details of commits using HEAD				: git show HEAD\
11. List of files not being tracked						: git status -n\
12. Remove untracked files						: git clean -f\
13. List configuration							: git config --list [\'97local, \'97global, \'97system]\
14. Changing global - user name						: git config \'97global user.email rep.loop@datacamp.com\
15. Unstaging commits 							: git reset HEAD\
16. To undo changes to a staged file					: git checkout \'97path/filename\
17. To undo staged file							: git reset HEAD \'97path/filename\
18. Show only last two commits						: git log -2 ___\
19. Up checkout a particular commit of a file				: git checkout hash path/filename\
20. Reset staged files							: git reset }